<!doctype html><meta content="text/html; charset=UTF-8" http-equiv=Content-Type><meta charset=utf-8><title>Substantiating knowledge - Semantic Web Reasoning With N3</title><!--[if lt IE 9]><script src="../../html5-enabled.js"></script><![endif]--><link href=https://ajax.googleapis.com/ajax/libs/jqueryui/1.8/themes/base/jquery-ui.css media=all rel=stylesheet type=text/css><link href=../../style.css media=screen rel=stylesheet type=text/css><body><header>Semantic Web Reasoning With N3</header><article><h1>Substantiating knowledge</h1><p>Predicates express relationships between entities.<br> Not surprisingly, some of those relationships have similar properties, which we can exploit.<h2>New relationships</h2><p>There's something we haven't told you about. Cindy and John are more than just friends.<pre><code>ppl:Cindy <strong>ppl:dates</strong> ppl:John.
</code></pre><p><p>Obviously, this also works the other way round. Time for some reasoning.<h3>Example: "knows" and "dates" rules</h3><div class=eye><p>Execute this command if you have downloaded the example files:<pre><code>eye <a class=data href=../../n3/cindy-dates.n3>cindy-dates.n3</a> <a class=data href=../../n3/knows-rule.n3>knows-rule.n3</a> <a class=data href=../../n3/dates-rule.n3>dates-rule.n3</a> --query <a class=query href=../../n3/query-all.n3>query-all.n3</a> --nope</code></pre><p>Alternatively, execute this command to use the online example files:<pre><code>eye <a href=../../n3/cindy-dates.n3>http://n3.restdesc.org/n3/cindy-dates.n3</a> <a href=../../n3/knows-rule.n3>http://n3.restdesc.org/n3/knows-rule.n3</a> <a href=../../n3/dates-rule.n3>http://n3.restdesc.org/n3/dates-rule.n3</a> --query <a href=../../n3/query-all.n3>http://n3.restdesc.org/n3/query-all.n3</a> --nope</code></pre></div><p>If we look at the "knows" and "dates" rules, we notice a resemblance. This is not a coincidence, because both predicates share the fact that they are <strong>symmetric</strong>.<p>A well-known vocabulary for expressing common ontological properties is <a href=http://www.w3.org/TR/owl-ref/ title="OWL Web Ontology Language">OWL</a>, the Web Ontology Language. It contains a <a href=http://www.w3.org/TR/owl-ref/#SymmetricProperty-def title=owl:SymmetricProperty>mechanism</a> to express that a property is symmetric:<pre><code>@prefix owl: &lt;http://www.w3.org/2002/07/owl#&gt;.

foaf:knows <strong>a owl:SymmetricProperty</strong>.
ppl:dates <strong>a owl:SymmetricProperty</strong>.
</code></pre><p><p>The <code>a</code> is the short Notation3 way of saying <em>"… <a href=http://www.w3.org/TR/rdf-schema/#ch_type title=rdf:type>belongs to the class</a> …"</em>.<p>Unfortunately, these statements alone are insufficient to actually create the relationship from John to Cindy.<h2>Defining predicates by rules</h2><p>We need a rule that conveys the meaning of the <code>owl:SymmetricProperty</code> predicate.<br> Luckily, this has been <a href=http://eulersharp.sourceforge.net/2003/03swap/owl-SymmetricProperty title="owl:SymmetricProperty theory">done for us</a>, as well as for <a href=http://eulersharp.sourceforge.net/#theories title="Euler Proof Mechanism — Theories">a lot of other OWL properties</a>.<br> Let's give it a try:<h3>Example: "knows" and "dates" rules</h3><div class=eye><p>Execute this command if you have downloaded the example files:<pre><code>eye <a class=data href=../../n3/cindy-dates.n3>cindy-dates.n3</a> <a class=data href=../../n3/reflexives.n3>reflexives.n3</a> <a class=data href=../../n3/owl-SymmetricProperty.n3>owl-SymmetricProperty.n3</a> --query <a class=query href=../../n3/query-all.n3>query-all.n3</a> --nope</code></pre><p>Alternatively, execute this command to use the online example files:<pre><code>eye <a href=../../n3/cindy-dates.n3>http://n3.restdesc.org/n3/cindy-dates.n3</a> <a href=../../n3/reflexives.n3>http://n3.restdesc.org/n3/reflexives.n3</a> <a href=../../n3/owl-SymmetricProperty.n3>http://n3.restdesc.org/n3/owl-SymmetricProperty.n3</a> --query <a href=../../n3/query-all.n3>http://n3.restdesc.org/n3/query-all.n3</a> --nope</code></pre></div><p>What happens here, is that the rule <em>substantiates</em> the meaning of the predicate.<br> It is very important here to get the exact picture of what the reasoner performs:<p><strong>Input</strong><ul><li>Cindy knows and dates John.<li>"Knows" and "dates" are symmetric.<li>The direction of symmetric predicates can be changed.</ul><p><strong>Reasoning</strong><ol><li>Since "knows" and "dates" are symmetric, the symmetric property applies.<li>This means that every statement with them, can be reversed.</ol><p><strong>Output</strong><ul><li>Cindy knows and dates John.<li>"Knows" and "dates" are symmetric.<li>John knows and dates Cindy.</ul><p>You might not have expected to see <code>owl:SymmetricProperty</code> in the output, since this seems part of the internal process, just like the rule. However, the query specifically asks EYE to return all statements it can find. You will learn later how to tailor this behavior.<h2>Reasoning at the meta level</h2><p>The last three chapters, we've made enormous steps along the abstraction route:<ol><li>We started out with a rule specific to Cindy and John.<li>We continued with a rule for all people, specific to "knows".<li>We ended up with a rule for all symmetric predicates.</ol><p>This characterizes a big movement from software engineering to knowledge engineering.<br> Rules no longer serve as a primary medium to reach a goal, but rather, they support the predicates that express this goal. Reasoning now happens at the meta level.<h2>Next</h2><h2>References</h2><ul><li><a href=http://en.wikipedia.org/wiki/Symmetric_relation title="Symmetric relation"><em>Symmetric relation</em> on Wikipedia</a><li><a href=http://en.wikipedia.org/wiki/Knowledge_engineering title="Knowledge engineering"><em>Knowledge engineering</em> on Wikipedia</a><li><a href=http://eulersharp.sourceforge.net/#theories title="Euler Proof Mechanism — Theories">Notation3 rules for widely-used concepts</a></ul></article><aside><h1>Contents</h1><ul><li><a href=../../>Home</a><li><a href=../../n3/>Writing Notation3</a><li><a href=../../n3/contexts/>Contexts</a><li><a href=../>A simple rule</a><li><a href=../executing-rules/>Executing rules</a><li><a href=../generalized-rules/>Generalized rules</a><li><span class=active title="You&apos;re here.">Substantiating knowledge</span></ul></aside><footer><p>© 2011 <a href=http://multimedialab.elis.ugent.be>Multimedia Lab — ELIS / Ghent University</a>. Authored by <a href=http://ruben.verborgh.org/>Ruben Verborgh</a>.</footer> <script src=https://ajax.googleapis.com/ajax/libs/jquery/1.7/jquery.min.js></script> <script src=https://ajax.googleapis.com/ajax/libs/jqueryui/1.8/jquery-ui.min.js></script> <script src=../../scripts.js></script>